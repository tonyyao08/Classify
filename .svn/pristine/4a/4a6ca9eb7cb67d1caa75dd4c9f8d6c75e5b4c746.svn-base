import { Component, Input, OnInit } from '@angular/core';
import { map, Observable } from 'rxjs';
import { DatabaseService } from 'src/app/core/database.service';
import { Image, Project } from 'src/models';


@Component({
  selector: 'app-monitoring',
  templateUrl: './monitoring.component.html',
  styleUrls: ['./monitoring.component.scss']
})
export class MonitoringComponent implements OnInit {

  @Input()
  project!: Project;

  latestImage?: Observable<{ base64: Promise<string>; image: Image }>;
  labels?: Observable<string[]>;
  history?: Observable<string[]>;

  constructor(private database: DatabaseService) { }

  ngOnInit(): void {
    const latestImages = this.database.monitorImages(this.project);
    this.latestImage = latestImages.pipe(map(images => images[0]));
    this.labels = latestImages.pipe(map(images => {
      return Array.from(images.map(({ image }) => image.label)
        .filter((label) => label !== null || label !== undefined)
        .map(label => label!.toUpperCase())
        .reduce((acc, curr) => {
          acc.add(curr);
          return acc;
        }, new Set<string>()))
    }))
    this.history = latestImages.pipe(
      map(images => {
        return images.map(image => `${image.image.createdAt} (${image.image.label})`)
      })
    )

  }

}
